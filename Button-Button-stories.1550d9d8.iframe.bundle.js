(self.webpackChunkui_playground=self.webpackChunkui_playground||[]).push([[96],{"./src/components/Button/Button.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Disabled:()=>Disabled,Large:()=>Large,Outline:()=>Outline,Primary:()=>Primary,Secondary:()=>Secondary,ShimmerEffect:()=>ShimmerEffect,Small:()=>Small,WithCustomColor:()=>WithCustomColor,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Button_stories});var external_STORYBOOK_MODULE_TEST_=__webpack_require__("storybook/test"),dist=__webpack_require__("./node_modules/@storybook/testing-library/dist/index.mjs"),jsx_runtime=(__webpack_require__("./node_modules/react/index.js"),__webpack_require__("./node_modules/react/jsx-runtime.js"));const Button=_ref=>{let{label,variant="primary",size="md",disabled=!1,backgroundColor,onClick,shimmer=!1}=_ref;const finalClass=["relative rounded-md font-medium transition-all focus:outline-none overflow-hidden",{sm:"text-sm px-3 py-1.5",md:"text-base px-4 py-2",lg:"text-lg px-6 py-3"}[size],disabled?"bg-gray-300 text-gray-500 cursor-not-allowed opacity-60":{primary:"bg-blue-600 text-white hover:bg-blue-700",secondary:"bg-gray-200 text-gray-800 hover:bg-gray-300",outline:"border border-blue-600 text-blue-600 bg-transparent hover:bg-blue-50"}[variant],shimmer&&!disabled?'before:content-[""] before:absolute before:inset-0 before:-translate-x-full before:animate-shimmer before:bg-gradient-to-r before:from-transparent before:via-white/40 before:to-transparent before:z-0':""].filter(Boolean).join(" "),bgStyle=backgroundColor&&!disabled?{backgroundColor}:void 0;return(0,jsx_runtime.jsx)("button",{className:finalClass,disabled,style:bgStyle,onClick,children:(0,jsx_runtime.jsx)("span",{className:"relative z-10",children:label})})},Button_Button=Button;Button.__docgenInfo={description:"",methods:[],displayName:"Button",props:{label:{required:!0,tsType:{name:"string"},description:""},variant:{required:!1,tsType:{name:"union",raw:'"primary" | "secondary" | "outline"',elements:[{name:"literal",value:'"primary"'},{name:"literal",value:'"secondary"'},{name:"literal",value:'"outline"'}]},description:"",defaultValue:{value:'"primary"',computed:!1}},size:{required:!1,tsType:{name:"union",raw:'"sm" | "md" | "lg"',elements:[{name:"literal",value:'"sm"'},{name:"literal",value:'"md"'},{name:"literal",value:'"lg"'}]},description:"",defaultValue:{value:'"md"',computed:!1}},disabled:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},backgroundColor:{required:!1,tsType:{name:"string"},description:""},onClick:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""},shimmer:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}}}};const Button_stories={title:"Components/Button",component:Button_Button,parameters:{layout:"centered"},tags:["autodocs"],argTypes:{variant:{control:"radio",options:["primary","secondary","outline"]},size:{control:"radio",options:["sm","md","lg"]},disabled:{control:"boolean"},shimmer:{control:"boolean"},backgroundColor:{control:"color"},onClick:{action:"clicked"}},args:{onClick:(0,external_STORYBOOK_MODULE_TEST_.fn)()}},Primary={args:{label:"Primary Button",variant:"primary",size:"md"},parameters:{docs:{description:{story:"A standard primary button with blue styling and hover effect."}}},play:async _ref=>{let{canvasElement}=_ref;const canvas=(0,dist.ux)(canvasElement),btn=await canvas.getByRole("button");await dist.Q4.click(btn),(0,external_STORYBOOK_MODULE_TEST_.expect)(btn).toHaveTextContent(/primary button/i)}},Secondary={args:{label:"Secondary Button",variant:"secondary",size:"md"},parameters:{docs:{description:{story:"A secondary button with neutral gray background and hover state."}}}},Outline={args:{label:"Outline Button",variant:"outline",size:"md"},parameters:{docs:{description:{story:"An outline button with transparent background and blue border."}}}},Small={args:{label:"Small Button",size:"sm"},parameters:{docs:{description:{story:"A smaller button suited for compact UI layouts."}}}},Large={args:{label:"Large Button",size:"lg"},parameters:{docs:{description:{story:"A large button designed for emphasis or primary actions."}}}},Disabled={args:{label:"Disabled Button",variant:"primary",disabled:!0},parameters:{docs:{description:{story:"A disabled primary button with muted styling and no interactivity."}}}},WithCustomColor={args:{label:"Custom Color",variant:"primary",backgroundColor:"#facc15"},parameters:{docs:{description:{story:"A button using a custom background color via inline style."}}}},ShimmerEffect={args:{label:"Shimmer Loading",shimmer:!0,backgroundColor:"#0ea5e9"},parameters:{docs:{description:{story:"A shimmer-style loading button with a subtle animation overlay."}}}},__namedExportsOrder=["Primary","Secondary","Outline","Small","Large","Disabled","WithCustomColor","ShimmerEffect"];Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Primary Button',\n    variant: 'primary',\n    size: 'md'\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'A standard primary button with blue styling and hover effect.'\n      }\n    }\n  },\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    const btn = await canvas.getByRole('button');\n    await userEvent.click(btn);\n    expect(btn).toHaveTextContent(/primary button/i);\n  }\n}",...Primary.parameters?.docs?.source}}},Secondary.parameters={...Secondary.parameters,docs:{...Secondary.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Secondary Button',\n    variant: 'secondary',\n    size: 'md'\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'A secondary button with neutral gray background and hover state.'\n      }\n    }\n  }\n}",...Secondary.parameters?.docs?.source}}},Outline.parameters={...Outline.parameters,docs:{...Outline.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Outline Button',\n    variant: 'outline',\n    size: 'md'\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'An outline button with transparent background and blue border.'\n      }\n    }\n  }\n}",...Outline.parameters?.docs?.source}}},Small.parameters={...Small.parameters,docs:{...Small.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Small Button',\n    size: 'sm'\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'A smaller button suited for compact UI layouts.'\n      }\n    }\n  }\n}",...Small.parameters?.docs?.source}}},Large.parameters={...Large.parameters,docs:{...Large.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Large Button',\n    size: 'lg'\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'A large button designed for emphasis or primary actions.'\n      }\n    }\n  }\n}",...Large.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Disabled Button',\n    variant: 'primary',\n    disabled: true\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'A disabled primary button with muted styling and no interactivity.'\n      }\n    }\n  }\n}",...Disabled.parameters?.docs?.source}}},WithCustomColor.parameters={...WithCustomColor.parameters,docs:{...WithCustomColor.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Custom Color',\n    variant: 'primary',\n    backgroundColor: '#facc15' // Tailwind yellow-400\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'A button using a custom background color via inline style.'\n      }\n    }\n  }\n}",...WithCustomColor.parameters?.docs?.source}}},ShimmerEffect.parameters={...ShimmerEffect.parameters,docs:{...ShimmerEffect.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Shimmer Loading',\n    shimmer: true,\n    backgroundColor: '#0ea5e9' // Tailwind blue-500\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'A shimmer-style loading button with a subtle animation overlay.'\n      }\n    }\n  }\n}",...ShimmerEffect.parameters?.docs?.source}}}},"?4f7e":()=>{}}]);